name: CI

env:
  JDK_JAVA_OPTIONS: -XX:+PrintCommandLineFlags -XX:MaxMetaspaceSize=4G -Xmx8G -Xss8M # JDK_JAVA_OPTIONS is _the_ env. variable to use for modern Java
  JVM_OPTS: -XX:+PrintCommandLineFlags -XX:MaxMetaspaceSize=4G -Xmx8G -Xss8M # for Java 8 only (sadly, it is not modern enough for JDK_JAVA_OPTIONS)

on:
  pull_request:
  push:
    branches: ['master', 'zio-2']
  release:
    types:
      - published

jobs:
  lint:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Lint code
        run: ./sbt check

  doc:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Check Document Generation
        run: ./sbt docs/docusaurusCreateSite

  test:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        java: ['8']
        scala: ['2.11.12', '2.12.14', '2.13.6', '3.0.2']
        platform: ['JVM']
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
        with:
          java-version: ${{ matrix.java }}
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Run tests
        run: ./sbt ++${{ matrix.scala }}! test${{ matrix.platform }}

  testJvms:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        java: ['11', '17']
        platform: ['JVM']
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
        with:
          java-version: ${{ matrix.java }}
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Test on different JVM versions
        run: ./sbt test${{ matrix.platform }}

  testPlatforms:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        java: ['8']
        platform: ['JS', 'Native']
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
        with:
          java-version: ${{ matrix.java }}
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Test on different Scala target platforms
        run: ./sbt test${{ matrix.platform }}

  docScalaVersions:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Check Document Generation
        run: ./sbt +Test/doc

  ci:
    runs-on: ubuntu-20.04
    needs: [lint, doc, test, testJvms, testPlatforms, docScalaVersions]
    steps:
      - name: Aggregate of lint, and all tests
        run: echo "ci passed"

  publish:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    needs: [ci]
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Release artifacts
        run: ./sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
