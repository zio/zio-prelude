name: CI

env:
  JAVA8: adopt@1.8
  JAVA11: adopt@1.11
  SCALA_211: 2.11.12
  SCALA_212: 2.12.13
  SCALA_213: 2.13.5
  SCALA_3: 3.0.0-M3
  JDK_JAVA_OPTIONS: -Xms2048M -Xmx3072M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8

on:
  pull_request:
  push:
    branches: ['master']
  release:
    types:
      - published

jobs:
  lint:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v10
      - name: Cache scala dependencies
        uses: coursier/cache-action@v5
      - name: Lint code
        run: sbt check

  test:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        java: [ $JAVA8 , $JAVA11 ]
        scala: [ $SCALA_211 , $SCALA_212 , $SCALA_213 , $SCALA_3 ]
        platform: ['JVM', 'JS', 'Native']
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}
      - name: Cache scala dependencies
        uses: coursier/cache-action@v5
      - name: Run tests
        if: ${{ matrix.scala != env.SCALA_3 }}
        run: sbt ++${{ matrix.scala }}! test${{ matrix.platform }}
      - name: Run dotty tests
        if: ${{ matrix.scala == env.SCALA_3 && matrix.platform == 'JVM' }}
        run: sbt ++${{ matrix.scala }}! testJVM

  ci:
    runs-on: ubuntu-20.04
    needs: [lint, test]
    steps:
      - name: Aggregate of lint, and all tests
        run: echo "ci passed"

  publish:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    needs: [ci]
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java 
        uses: olafurpg/setup-scala@v10
      - name: Cache scala dependencies
        uses: coursier/cache-action@v5
      - name: Release artifacts
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
